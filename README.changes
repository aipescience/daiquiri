2015/03/02
==========

Auth_Token needs to be created, run

    ./init.php -s

Requrired columns for detail keys:

ALTER TABLE `Auth_DetailKeys` ADD COLUMN `required` BOOL NOT NULL;
ALTER TABLE `Meetings_ParticipantDetailKeys` ADD COLUMN `required` BOOL NOT NULL;

ALTER TABLE `Meetings_ParticipantDetailKeys` ADD COLUMN `hint` VARCHAR(256);

2014/12/08
==========

New static file functionality, run ./init.php -si to add the new table.

Resources neew to be updated as well.

2014/10/10
==========

Query_Model_Account::listJobs() has been renamed to index().
Query_Model_Download::regen() has been renamed to regenerate().

Dropping and re-initing Auth_Rules or manually changing the strings in
Auth_Rules.permissions is required.

2014/09/22
==========

The suffixed for the download adapters have been changed and need to be changed in 
the configuration of existing applications as well:

'mysql' => array('suffix' => "sql")
'csv' => array('suffix' => "csv")
'vodump-csv' => array('suffix' => "csv")
'votable' => array('suffix' => "votable.xml")
'votableB1' => array('suffix' => "votableB1.xml")
'votableB2' => array('suffix' => "votableB2.xml")

Note that the dot at the beginning is removed and will be added automatically.

2014/07/18
==========

Meetings module refactored: Participant detail keys and meetings need to be updated.

ALTER TABLE `Meetings_ParticipantDetailKeys` ADD COLUMN `type_id` INTEGER NOT NULL;
ALTER TABLE `Meetings_ParticipantDetailKeys` ADD COLUMN `options` VARCHAR(256);
ALTER TABLE `Meetings_Meetings` ADD COLUMN `slug` VARCHAR(256) NOT NULL;

2014/07/11
==========

The headDaiquiri helper is now called headStatic. Layout files need to be updated.

2014/05/19
==========

Big refactoring, a lot of things to change:

* update init to new layout, especially $options['init'] key

* update database schema

in the database:

DROP TABLE Auth_Resources;
DROP TABLE Auth_Rules;
DROP TABLE Config_Entries;
RENAME TABLE Config_Messages TO Core_Messages;
RENAME TABLE Config_Templates TO Core_Templates;
ALTER TABLE Data_Columns ADD COLUMN `publication_select` BOOLEAN;
ALTER TABLE Data_Columns ADD COLUMN `publication_update` BOOLEAN;
ALTER TABLE Data_Columns ADD COLUMN `publication_insert` BOOLEAN;
ALTER TABLE Data_Columns ADD COLUMN `publication_role_id` INTEGER;
DELETE FROM Auth_Sessions;

in the app directory:

./init.php -si

2014/02/20
==========

Order parameter for databases, table, columns, and function in data module introduced.

Re-Init or manual fix needed:

ALTER TABLE `Data_Databases` ADD COLUMN `order` INTEGER;
ALTER TABLE `Data_Tables` ADD COLUMN `order` INTEGER;
ALTER TABLE `Data_Columns` CHANGE COLUMN `position` `order` INTEGER;
ALTER TABLE `Data_Functions` ADD COLUMN `order` INTEGER;

2013/12/10
==========

Data permissions rewritten, resources in data do not check the publication role anymore. Concordantly, the Models in data should only be accessible by admin. Remove permissions on Data_Model_Databases, Data_Model_Tables, Data_Model_Columns, and Data_Model_Functions for user and guest.

WARNING! not setting this might be a potential security problem!

In init.php $options['data']['database'], $options['data']['tables'], $options['data']['columns'], $options['data']['functions'], $options['query']['examples'], the publication_role is now given by the corresponding string and not by the ID. Therefore publication_role_id is not valid anymore.


2013/12/04
==========

Table `Config_Messages` added. Resource 'Config_Model_Messages' with permission 'index,show,create,update,delete' for admin and 'show' for guest/user added.

Re-Init or manual fix needed:

CREATE TABLE IF NOT EXISTS `Config_Messages` (
  `id` INTEGER PRIMARY KEY NOT NULL AUTO_INCREMENT,
  `key` VARCHAR(256) NOT NULL,
  `value` TEXT NOT NULL
) ENGINE InnoDB COLLATE 'utf8_unicode_ci';

INSERT INTO `Auth_Resources` VALUES (NULL,'Config_Model_Messages');

SET @resource_id := (SELECT id FROM `Auth_Resources` WHERE `resource`='Auth_Resources');

SET @role_id := (SELECT id FROM `Auth_Roles` WHERE `role`='admin');
INSERT INTO `Auth_Rules` VALUES (NULL,@role_id,@resource_id,'index,create,show,update,delete');

SET @role_id := (SELECT id FROM `Auth_Roles` WHERE `role`='user');
or
SET @role_id := (SELECT id FROM `Auth_Roles` WHERE `role`='guest');

INSERT INTO `Auth_Rules` VALUES (NULL,@role_id,@resource_id,'show');


2013/12/03
==========

In init.php $options['auth']['user'] the status and the role are now given by the corresponding string and not by the ID. Therefore status_id and role_id are not valid anymore.

Fields `description`, and `publication_role_id` added to Table `Query_Examples`. Re-Init of query example needed:

Re-Init or manual fix needed:

ALTER TABLE `Query_Examples` ADD `description` TEXT;
ALTER TABLE `Query_Examples` ADD `publication_role_id` INTEGER;


2013/11/22
==========

From now on, add the following config entry to your instance:

    auth.activation:

set this to 1 if you want the user account to be validated by a moderator, the default value is 0.

WARNING! not setting this might be a potential security problem!