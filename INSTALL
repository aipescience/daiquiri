How to setup a basic instance of daiquiri
'''''''''''''''''''''''''''''''''''''''''

This is meant to be a step by step guide to setup a new instance of daiquiri. 
It is tested with Ubuntu 12.04, debian 7.0 and Scientific Linux 6.3. Other 
distributions might differ. For the deployment of an existing daiquiri web 
application on a new server, follow only first steps until Initialising 
Project.

Install prerequisites and prepare server
----------------------------------------

As usual it is the best idea to install as much as possible using the 
distribution packaging system.


# For RHEL/CentOS/SL
$ yum install httpd mysql git php php-devel php-mysql php-gd php-pear

# debian/Ubuntu
$ apt-get install apache2 mysql-server git php5 php5-dev php5-mysql php5-gd


On debian/Ubuntu mod rewrite needs to enabled manually.

$ a2enmod rewrite


The Zend Framework itself should be obtained from the webpage. The direct link 
to version 1.12 is http://packages.zendframework.com/releases/ZendFramework-1.12.0/ZendFramework-1.12.0-minimal.tar.gz 
. We suggest to install it to /opt:


cd /opt
wget http://packages.zendframework.com/releases/ZendFramework-1.12.0/ZendFramework-1.12.0-minimal.tar.gz
tar xzvf ZendFramework-1.12.0-minimal.tar.gz


Next, setup the php.ini file. It is located in '/etc/php.ini' (for 
RHEL/CentOS/SL) or '/etc/php5/apache2/php.ini' and '/etc/php5/cli/php.ini' 
(debian/Ubuntu). Put under 'Paths and Directories' (~ line 780) the path to 
Zend and pear, e.g.


include_path = ".:/opt/ZendFramework-1.12.0-minimal/library/:/usr/share/pear/"


Obtain the daiquiri and the daiquiri-app repository
---------------------------------------------------

The preferred way of getting the Daiquiri repositories is by cloning them from 
github:


git clone ssh://git@github.com:jochenklar/daiquiri.git
git clone ssh://git@github.com:jochenklar/daiquiri-app.git


or


git clone https://github.com/jochenklar/daiquiri.git
git clone https://github.com/jochenklar/daiquiri-app.git


Although not necessary, it is recommended to clone both repositories next to 
each other in one directory. Preferably '/var/www', but only if this is your 
Apache DocumentRoot.

Configure the init.php file of the application
----------------------------------------------

This is covered on a seperate page of the HTML documentation (or see
escience.aip.de/daiquiri)

Create captcha and download directory
-------------------------------------

Daiquiri need directories to store captcha images and download files. Again, 
we recommend to put these under '/var/daiquiri/', but any other path which is 
not visible by the webserver (under your Apache DocumentRoot or Aliases) is ok. 
For Ubuntu the AppArmor rules must be adjusted, to make it possible for MySQL 
to write in the download directory. In RHEL/CentOS/SL selinux should be set to 
permissive.


mkdir -p /var/daiquiri/captcha /var/daiquiri/download

# RHEL/CentOS/SL
chown -R apache:apache /var/daiquiri

# Ubuntu/debian
chown -R www-data:www-data /var/daiquiri

# when running AppArmor
echo "/var/daiquiri/download/** rw," >> /etc/apparmor.d/local/usr.sbin.mysqld


Configure virtual host for Apache
---------------------------------

The virtual host configuration can be automatically generated by the init.php 
file. For this, change into application directory and run:


./init.php -v


The upper part of the output is for a separate host for your daiquiri 
application while the lower one is for running daiquiri under an alias. 
Please copy the lines you need to your apache configuration and restart the 
server.


mkdir /var/www/captcha /var/www/download

# RHEL/CentOS/SL
service httpd restart

# Ubuntu/debian
service apache2 restart


Configure MySQL database
------------------------

As for the virtual host configuration, the commands to create users in MySQL 
can also be automatically generated. For this, change into application 
directory and run:


./init.php -u


Check the output and then copy-paste it into an MySQL root prompt.

To clear the database from the user created in this way the output of


./init.php -c


can be used.

Create softlinks
----------------

The daiquiri application needs two softlinks to work:


public/captcha -> /var/www/captcha
public/daiquiri -> /path/to/daiquiri/client


They can be automatically created by running


./init.php -l


Run the init process
--------------------

If everything is set up, the actual init process which creates the databases 
and tables can be triggered. This is done by calling:


./init.php -ri # 'r' for reseting the database and 'i' for initializing