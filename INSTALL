How to setup a basic instance of daiquiri
'''''''''''''''''''''''''''''''''''''''''

This is meant to be a step by step guide to setup a new instance of daiquiri. 
It is tested with Ubuntu 12.04, debian 7.0 and Scientific Linux 6.3. Other 
distributions might differ. For the deployment of an existing daiquiri web 
application on a new server, follow only first steps until Initialising 
Project.

A more detailed documentation can be found on https://escience.aip.de/daiquiri

Install prerequisites and prepare server
----------------------------------------

As usual it is the best idea to install as much as possible using the 
distribution packaging system.

# For RHEL/CentOS/SL
$ yum install httpd mysql git php php-devel php-mysql php-gd php-pear

# debian/Ubuntu
$ apt-get install apache2 mysql-server git php5 php5-dev php5-mysql php5-gd

On debian/Ubuntu mod rewrite needs to enabled manually.

$ a2enmod rewrite


Obtain the daiquiri and the daiquiri-app repository
---------------------------------------------------

The preferred way of getting the Daiquiri repositories is by cloning them from 
github:

$ git clone ssh://git@github.com/jochenklar/daiquiri.git
$ git clone ssh://git@github.com/jochenklar/daiquiri-app.git

or

$ git clone https://github.com/jochenklar/daiquiri.git
$ git clone https://github.com/jochenklar/daiquiri-app.git

Although not necessary, it is recommended to clone both repositories next to 
each other in one directory. For this document we assume this is '/srv/daiquiri'.

Configure the init.php file of the application
----------------------------------------------

Change to the daiquiri-app directory and copy default.init.php to init.php 
(which is ignored by git).

Then edit init.php for your individual setup. The different options are covered in the HTML 
documentation (see https://escience.aip.de/daiquiri/cms/init-file/).

Create captcha and download directory
-------------------------------------

Daiquiri needs directories to store captcha images and download files. Again, 
we recommend to put these under '/srv/daiquiri/'. For Ubuntu the AppArmor rules 
must be adjusted, to make it possible for MySQL to write in the download directory. 
In RHEL/CentOS/SL selinux should be set to permissive.

mkdir -p /srv/daiquiri/captcha /srv/daiquiri/download

# RHEL/CentOS/SL
chown -R apache:apache /srv/daiquiri

# Ubuntu/debian
chown -R www-data:www-data /srv/daiquiri

# when running AppArmor
echo "/srv/daiquiri/download/** rw," >> /etc/apparmor.d/local/usr.sbin.mysqld


Configure virtual host for Apache
---------------------------------

The virtual host configuration can be automatically generated by the init.php 
file. For this, change into application directory and run:

./init.php -v

Please copy the lines you need to your apache configuration and restart the 
server.

# RHEL/CentOS/SL
service httpd restart

# Ubuntu/debian
service apache2 restart


Configure MySQL database
------------------------

As for the virtual host configuration, the commands to create users in MySQL 
can also be automatically generated. For this, change into application 
directory and run:

./init.php -u

Check the output and then copy-paste it into an MySQL root prompt.

To clear the database from the user created in this way the output of

./init.php -c

can be used.


Create softlinks
----------------

The daiquiri application needs several softlinks to work:

library -> /path/to/daiquiri/library
modules -> /path/to/daiquiri/modules
public/captcha -> /var/www/captcha
public/daiquiri -> /path/to/daiquiri/client

They can be automatically created by running

./init.php -l


Run the init process
--------------------

If everything is set up, the actual init process which creates the databases 
and tables can be triggered. This is done by calling:

./init.php -si # 's' for syncing the database and 'i' for initializing
